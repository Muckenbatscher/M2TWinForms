# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Publish GitHub NuGet package

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+' 
      - 'v[0-9]+.[0-9]+.[0-9]+-*'

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.full_without_prefix }}
      valid: ${{ steps.version.outputs.is_valid }}
    steps:
    - name: Check Version Format in Tag
      uses: nowsprinting/check-version-format-action@v4.0.7
      id: version
      with:
        prefix: 'v'

  build-push:
    if: ${{ needs.version.outputs.valid == 'true' }}
    strategy:
      matrix:
        project: ['M2TWinForms/M2TWinForms.csproj', 'M2TWinForms.Themes/M2TWinForms.Themes.csproj']

    runs-on: ubuntu-latest
    needs: version
    env:
      VERSION: ${{ needs.version.outputs.version }}
      OUTDIR: 'PackageBuild'
    permissions:
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore ${{ matrix.project }} -p:EnableWindowsTargeting=true
    - name: Pack
      run: |
        dotnet dotnet pack ${{ matrix.project }} --no-restore \
          -c Release -o $OUTDIR -p:EnableWindowsTargeting=true \
          -p:PackageVersion=$VERSION
    - name: Add GitHub NuGet source
      run: | 
          dotnet nuget add source "https://nuget.pkg.github.com/Muckenbatscher/index.json" \
            --username Muckenbatscher \
            --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text \
            --name github 
    - name: Get project properties
      id: props
      run: echo "package_id=$(dotnet msbuild "${{ matrix.project }}" -getProperty:PackageID)" >> $GITHUB_OUTPUT
    - name: Push to GitHub source
      run: | 
          dotnet nuget push "$OUTDIR/${{ steps.props.outputs.package_id }}.$VERSION.nupkg" \
            --api-key ${{ secrets.GITHUB_TOKEN }} --source "github"
